#check if packages are installed, if not, install
list.of.packages <- c("ggplot2", "dplyr", "tidyr", "tidyverse", "gprofiler2","purrr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)

#load the packages
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidyverse)
library(gprofiler2)
library(purrr)

#add the biomarkers of interest (biom_oi)
biom_oi<-c("DYRK1A","BDNF","MTHFR")

#conduct the functional enrichment using gprofileR
uniqgene<-biom_oi
enr1<-gost(uniqgene, organism="hsapiens", significant=TRUE, user_threshold=0.05, correction_method="fdr", domain_scope="annotated", sources=c("REAC","GO:BP","KEGG"), evcodes=TRUE, exclude_iea = TRUE)
dfenr<-as.data.frame(enr1$result)

#print first lines
head(dfenr)

#prepare dataframe for EM
#select columns of interest
col_oi<-c("p_value","term_size","intersection_size","precision","recall","term_id","term_name","parents","intersection")
dfenr_sel<-dfenr %>% select(all_of(col_oi))
#create a dataframe for each gene
dfsplit<-dfenr_sel %>% 
  mutate(Gene=strsplit(as.character(intersection),",")) %>% 
  unnest(Gene)
list.df<-list()
for (i in biom_oi){
  df<-subset(dfsplit,Gene==i)
  df$origin<-1 #add a number for EM (must be either positive or negative)
  df$FDR<-df$p_value #add if FDR adjusted or not, in our case, p values are FDR adjusted
  list.df[[i]]<-df
}
#select only some columns to fit the EM format
col_oi_EM<-c("term_id","term_name","p_value","FDR","origin","Gene")
list.df.EM<-map(list.df,function(x) x %>% dplyr::select(all_of(col_oi_EM)))
#save each df into your local folder
for (i in biom_oi)  {      
  x <- list.df.EM[i]
  write.table(x,file=paste0("df_", i, ".txt"),sep="\t",row.names=FALSE,quote = FALSE)
}


